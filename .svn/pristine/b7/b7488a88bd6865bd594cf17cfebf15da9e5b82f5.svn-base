Imports npoAddressingAddIn.Utilities
Imports System.Windows.Forms
Imports ESRI.ArcGIS.Carto
Imports ESRI.ArcGIS.ArcMapUI
Imports ESRI.ArcGIS.Geometry
Imports ESRI.ArcGIS.Framework
Imports ESRI.ArcGIS.Desktop
Imports ESRI.ArcGIS.esriSystem
Imports ESRI.ArcGIS.Geodatabase
Imports ESRI.ArcGIS.DataSourcesGDB
Imports ESRI.ArcGIS.DataSourcesFile
Imports System.Collections
Imports System.Runtime.InteropServices
Imports ESRI.ArcGIS.Editor

Public Class UpdateFromMCT
    Inherits ESRI.ArcGIS.Desktop.AddIns.Button
    Dim cm As New Utilities

    Public Sub New()

    End Sub

    Public Class npoStreetName

        Public nameLatin As String = ""
        Public nameArabic As String = ""
        Public pointsList As New List(Of IPoint)

        Sub New()

        End Sub

        Sub addPoint(ByVal pPoint As IPoint)
            Me.pointsList.Add(pPoint)
        End Sub

    End Class

    Protected Overrides Sub OnClick()
        Try
            Dim mLatinSourceField = "RoadName_E"
            Dim mArabicSourceField = "RoadName_A"
            Dim mSources As IFeatureLayer = cm.FindLayerByName("roadscent2011")
            Dim mSegments As IFeatureLayer = cm.FindLayerByName("StreetSegment")
            Dim mStreets As ITable = cm.FindTableByName("Street")

            Dim mWorkspaceEdit As IWorkspaceEdit = cm.StartEditSession(mSegments)

            'Select each street from source
            Dim mStreetSourceCursor As IFeatureCursor
            mStreetSourceCursor = mSources.Search(Nothing, False)
            Dim mStreetNamesList As New Dictionary(Of String, npoStreetName)
            Dim mStreetPointsList As New List(Of IPoint)
            Dim mStreetNameObj As npoStreetName = Nothing
            Dim mFeature As IFeature = mStreetSourceCursor.NextFeature
            Do Until mFeature Is Nothing
                Dim mStreetNameLatin As String = cm.GetFeatureValue(mFeature, mLatinSourceField)
                Dim mStreetNameArabic As String = cm.GetFeatureValue(mFeature, mArabicSourceField)
                If Not mStreetNameLatin = Nothing Then
                    Dim mPolyLine As IPolyline = mFeature.Shape
                    Dim mPoint As IPoint = New Point
                    'mPoint = mPolyLine.FromPoint
                    mPolyLine.QueryPoint(ESRI.ArcGIS.Geometry.esriSegmentExtension.esriNoExtension, 0.5, True, mPoint)
                    If Not mStreetNamesList.ContainsKey(mStreetNameLatin) Then
                        mStreetNameObj = New npoStreetName()
                        mStreetNameObj.nameLatin = mStreetNameLatin
                        mStreetNameObj.nameArabic = mStreetNameArabic
                        mStreetNamesList.Add(mStreetNameLatin, mStreetNameObj)
                    Else
                        mStreetNamesList(mStreetNameLatin).addPoint(mPoint)
                    End If
                    mFeature = mStreetSourceCursor.NextFeature
                End If
            Loop

            Dim mStreetCursor As ICursor = mStreets.Insert(False)


            'For each street
            For Each pStreetName As npoStreetName In mStreetNamesList.Values

                'Insert new street name 
                Dim pStreetBuffer As IRowBuffer = mStreets.CreateRowBuffer

                'Set latin streetname
                cm.SetRowBufferValue(pStreetBuffer, "nameEnglish", pStreetName.nameLatin)

                'Set arabic streetname
                cm.SetRowBufferValue(pStreetBuffer, "nameArabic", pStreetName.nameArabic)

                'Set type of road
                Dim mRoadType As Integer = streetTypeEnumeration.LocalStreet 'Default
                If pStreetName.nameLatin.ToLower.Contains("street") Then
                    mRoadType = streetTypeEnumeration.Collector
                ElseIf pStreetName.nameLatin.ToLower.Contains("road") Then
                    mRoadType = streetTypeEnumeration.Arterial
                ElseIf pStreetName.nameLatin.ToLower.Contains("r\a") Or pStreetName.nameLatin.ToLower.Contains("r/a") Then
                    mRoadType = streetTypeEnumeration.Roundabout
                End If
                cm.SetRowBufferValue(pStreetBuffer, "streetType", mRoadType.ToString)
                Dim mStreetID As Integer = mStreetCursor.InsertRow(pStreetBuffer)
                If mStreetID = Nothing Then
                    cm.Debug("Street ID was not numeric: " & mStreetID)
                    Exit Sub
                End If

                'Update status bar with layer name
                My.ArcMap.Application.StatusBar.Message(0) = pStreetName.nameLatin

                'For each source point
                For Each mPoint As IPoint In pStreetName.pointsList

                    'Select matching streets and update

                    'Buffer the point
                    Dim mTopologicalOperator As ITopologicalOperator
                    mTopologicalOperator = mPoint

                    'Create a polygon from a 5px buffer around the clicked point
                    Dim mPolygon As IPolygon = mTopologicalOperator.Buffer(2)

                    'Prepare the spatial filter
                    Dim pFilter As ISpatialFilter = New SpatialFilter
                    Dim geometryColumn As String = mSegments.FeatureClass.ShapeFieldName
                    With pFilter
                        .Geometry = mPolygon
                        .GeometryField = geometryColumn
                        .SpatialRel = esriSpatialRelEnum.esriSpatialRelIntersects
                    End With

                    'Perform the select
                    Dim mSelectionSet As ISelectionSet = mSegments.FeatureClass.Select(pFilter, esriSelectionType.esriSelectionTypeIDSet, esriSelectionOption.esriSelectionOptionNormal, mWorkspaceEdit)

                    'Create an update cursor
                    Dim mSelectionSet2 As ISelectionSet2 = CType(mSelectionSet, ISelectionSet2)
                    Dim mSegmentCursor As IFeatureCursor = Nothing
                    mSelectionSet2.Update(Nothing, True, mSegmentCursor)

                    'Iterate each result street
                    Dim mSegmentFeature As IFeature = mSegmentCursor.NextFeature
                    Do Until mSegmentFeature Is Nothing
                        cm.SetFeatureValue(mSegmentFeature, "streetID", mStreetID)
                        cm.SetFeatureValue(mSegmentFeature, "hierarchyLevel", mRoadType)
                        mSegmentCursor.UpdateFeature(mSegmentFeature)
                        mSegmentFeature = mSegmentCursor.NextFeature
                    Loop 'Next matching street segment

                    'Release segment cursor
                    cm.Release(mSegmentCursor)

                Next 'Next point

            Next 'Next source street

            'Release cursors
            mStreetCursor.Flush()
            cm.Release(mStreetCursor)
            cm.Release(mStreetSourceCursor)

            'Stop edit sessoin
            cm.StopEditSession(mWorkspaceEdit)

        Catch ex As Exception
            cm.Debug(ex.Message)
        End Try

    End Sub

    Protected Overrides Sub OnUpdate()

    End Sub
End Class
